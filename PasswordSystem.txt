package yy;

import java.util.Scanner;

public class PasswordSystem {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("-==============================");
            System.out.println("欢迎使用密码加密解密系统");
            System.out.println("==============================");
            System.out.println("请选择操作：");
            System.out.println("1. 加密");
            System.out.println("2. 解密");
            System.out.println("3. 退出");
            System.out.print("请输入选项序号：");

            int option = scanner.nextInt();

            if (option == 1) {
                System.out.println("==============================");
                System.out.println("欢迎使用密码加密解密系统");
                System.out.println("==============================");
                System.out.print("请输入要加密的数字密码：");
                int password = scanner.nextInt();

                int encryptedPassword = encryptPassword(password);
                System.out.println("加密后的结果是：" + encryptedPassword);
                System.out.println("按任意键返回");
                scanner.nextLine();
                scanner.nextLine();
            } else if (option == 2) {
                System.out.println("==============================");
                System.out.println("欢迎使用密码加密解密系统");
                System.out.println("==============================");
                System.out.print("请输入要解密的数字密码：");
                int encryptedPassword = scanner.nextInt();

                int decryptedPassword = decryptPassword(encryptedPassword);
                System.out.println("解密后的结果是：" + decryptedPassword);
                System.out.println("按任意键返回");
                scanner.nextLine();
                scanner.nextLine();
            } else if (option == 3) {
                break;
            } else {
                System.out.println("无效的菜单选项，请重新输入!");
            }
        }

        scanner.close();    
     }

    public static int encryptPassword(int password) {
        int num1 = (password / 1000 + 5) % 10;
        int num2 = (password % 1000 / 100 + 5) % 10;
        int num3 = (password % 100 / 10 + 5) % 10;
        int num4 = (password % 10 + 5) % 10;

        int encryptedPassword = num4 * 1000 + num3 * 100 + num1 * 10 + num2;
		return reverseNumber(encryptedPassword);
        
    }

    public static int decryptPassword(int encryptedPassword) {
        int reversedNumber = reverseNumber(encryptedPassword);

        int num1 = (reversedNumber % 10 + 10 - 5) % 10;
        int num2 = (reversedNumber / 10 % 10 + 10 - 5) % 10;
        int num3 = (reversedNumber / 100 % 10 + 10 - 5) % 10;
        int num4 = (reversedNumber / 1000 + 10 - 5) % 10;

        int decryptedPassword = num2 * 1000 + num1 * 100 + num3 * 10 + num4;
        return decryptedPassword;
    }

    public static int reverseNumber(int number) {
        int reversedNumber = 0;

        while (number != 0) { // 反转数字
            reversedNumber = reversedNumber * 10 + number % 10;
            number /= 10;
        }

        return reversedNumber;
    }
}